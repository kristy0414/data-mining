\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}
mini project


Name:YIMING CHEN


<<reference1,echo=TRUE,eval=TRUE>>=
library(rpart)	
spam.data <- read.table("http://rohan.sdsu.edu/~jjfan/sta702/spamdata.txt", 
                        sep=",", na.strings="NA")

dim(spam.data)
names(spam.data) <- c("wfmake", "wfaddress", "wfall", "wf3d", "wfour", 
                      "wfover", "wfremove", "wfinternet", "wforder", "wfmail", 
                      "wfreceive", "wfwill", "wfpeople", "wfreport", "wfaddresses", 
                      "wffree", "wfbusiness", "wfemail", "wfyou", "wfcredit", "wfyour", 
                      "wffont", "wf000", "wfmoney", "wfhp", "wfhpl", "wfgeorge", "wf650", 
                      "wflab", "wflabs", "wftelnet", "wf857", "wfdata", "wf415", "wf85", 
                      "wftechnology", "wf1999", "wfparts", "wfpm", "wfdirect", "wfcs", 
                      "wfmeeting", "wforiginal", "wfproject", "wfre", "wfedu", "wftable", 
                      "wfconference", "cfsc", "cfpar", "cfbrack", "cfexc", "cfdollar", 
                      "cfpound", "crlaverage", "crllongest", "crltotal", "spam")
spam.data$spam[-is.na(spam.data$spam)]
spam.data$spam <- factor(spam.data$spam, levels=0:1, 
                         labels=c("No", "Spam"))
set.seed(857)
table(spam.data$spam) 
set1<-spam.data[spam.data$spam=="Spam",]
set0<-spam.data[spam.data$spam=="No",]
dim(set1) 
dim(set0)  
1813*2/3
2788*2/3

training1<-sample(1:1813,1208)
test1<-(1:1813)[-training1]


training0<-sample(1:2788,1858)
test0<-(1:2788)[-training0]


train<-rbind(set1[training1,],set0[training0,])
test<-rbind(set1[test1,], set0[test0,])
dim(train)  
dim(test)   


my.control <- rpart.control(cp=0, xval=10)
lmat <- matrix(c(0,10,1,0), nrow=2, byrow=T)



fit1<- rpart(spam ~ ., data=train, method="class",
        control=my.control,parms = list(loss=lmat))

a<-printcp(fit1)  
a[19,4]+a[19,5]
@
we choose tree number 16.
<<reference2,echo=TRUE,eval=TRUE,fig=TRUE>>=
tree16<-prune(fit1,cp=(fit1$cptable[15,1]+fit1$cptable[16,1])/2)
pred16<-predict(tree16,newdata=test,type="class")

error16<-table(test$spam,pred16)


@
A.The estimate of the misclassification rate of the optimal
tree is 669. 


False positive means (not|spam),
as("not" in predict|"spam" in test),it is 79.


False negative means (spam|not),
as("spam" in predict|"not" in test),it is 590.



\end{document}